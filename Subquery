Question 1: Employee who's manager left the company

select employee_id from Employees
where salary < 30000 AND manager_id NOT IN (select employee_id from Employees)
order by 1;

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Question 2: Exchange seat

SELECT 
CASE    
 WHEN id = (SELECT MAX(id) FROM seat) AND id % 2 = 1
    THEN id 
    WHEN id % 2 = 1
    THEN id + 1
    ELSE id - 1
    END AS id,
    student
FROM seat
ORDER BY id
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Question 3: Movie Rating 

with cte1 as 
(
select name, count(rating) from Users U
JOIN MovieRating R 
ON U.user_id = R.user_id
group by 1
order by 2 DESC, 1 ASC
LIMIT 1
)
select name as results from cte1
UNION ALL
select title from 
(select title, avg(rating) from Movies M
JOIN MovieRating R
ON M.movie_id = R.movie_id
where created_at BETWEEN '2020-02-01' and '2020-02-29'
group by 1
order by 2 DESC, 1 ASC
LIMIT 1
) as results

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Question 4: Restaurant Growth 

with cte1 as
(select visited_on, sum(amount) as amount 
from customer 
group by visited_on
),
cte2 as
(
select visited_on, 
sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount,
round(avg(amount) over (order by visited_on rows between 6 preceding and current row),2) as average_amount
from cte1
),
cte3 as
(
select visited_on 
from cte2 
order by visited_on 
limit 6
)
select * from cte2 
where visited_on not in (select * from cte3);
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Question 5: Friend Request who has more friend 

with cte1 as
(
    select requester_id as id from RequestAccepted
    union all
    select accepter_id as id from RequestAccepted
)
select id, count(id) as num from cte1
group by 1
order by 2 DESC
LIMIT 1

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Question 6: Investment in 2016

select ROUND(sum(tiv_2016),2) as tiv_2016 from Insurance X
where X.tiv_2015 IN (select tiv_2015 from Insurance where pid != X.pid) 
AND
(X.lat, X.lon) NOT IN (select lat, lon from Insurance where pid != X.pid)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Question 7: Department top 3 salary 

with cte1 as
(
select
    D.name as Department,
    E.name as Employee,
    salary,
    dense_rank() OVER (partition by departmentId order by salary DESC) AS DR
    from Employee E
    JOIN Department D
    ON E.departmentId = D.id
)
select Department, Employee, Salary from cte1 
where DR <= 3
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
